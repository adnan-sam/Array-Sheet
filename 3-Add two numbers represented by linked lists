/* node for linked list

class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

*/

class Solution{
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        first=reversefunc(first);
        second=reversefunc(second);
        Node ans=new Node(0);
        Node ptr=ans;
        int carry=0;
        while(first!=null || second!=null || carry!=0)
        {
            int sum=0;
            if(first!=null)
            {
                sum+=first.data;
                first=first.next;
            }
            if(second!=null)
            {
                sum+=second.data;
                second=second.next;
            }
            if(carry!=0)
            {
                sum+=carry;
                carry=0;
            }
            carry=sum/10;
            Node newnode=new Node(sum%10);
            ptr.next=newnode;
            ptr=ptr.next;
        }
        return reversefunc(ans.next); //As ans i.e. first node of ans has a value 0
    }
    static Node reversefunc(Node head)
    {
        Node curr=head;
        Node prev=null;
        while(curr!=null)
        {
            Node temp=curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
}
